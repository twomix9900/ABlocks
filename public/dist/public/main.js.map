{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"* {\\n  font-size: 0;\\n}\\n\\n.block {\\n  border: 10px black solid;\\n  width: 50px;\\n  height: 50px;\\n  background-color: #888;\\n  display: inline-block;\\n}\\n\\n.block-alt {\\n  border: 10px black solid;\\n  width: 50px;\\n  height: 50px;\\n  background-color: #333;\\n  display: inline-block;\\n}\\n\\n.col {\\n  display: inline-block;\\n}\\n\\n.row {\\n  text-align: center;\\n}\\n\\n.container {\\n  display: flex;  \\n  justify-content: center;\\n  align-items: center;\\n  height: 600px;\\n}\\n\\n\"","module.exports = \"<div class=\\\"container\\\">\\n  <div>\\n    <div class=\\\"row\\\" *ngFor=\\\"let row of _world; let y = index;\\\">\\n        <div class=\\\"col\\\" *ngFor=\\\"let col of _world[y]; let x = index;\\\">\\n          <div class=\\\"block\\\" (click)=\\\"toggle(x, y)\\\" *ngIf=\\\"_world[y][x] != 0\\\">\\n          </div>\\n          <div class=\\\"block-alt\\\" (click)=\\\"toggle(x, y)\\\" *ngIf=\\\"_world[y][x] == 0\\\">\\n          </div>\\n        </div>\\n      </div>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\n\nexport class AppComponent implements OnInit {\n  _blockCount: number;\n  _blocksPerRow: number;\n  _lastRow: number;\n  _rowCount: number;\n  _world: any[];\n\n\n  constructor() {\n  }\n\n  ngOnInit() {\n    this._blockCount = 11;\n    this._blocksPerRow = 4;\n\n    this._lastRow = this._blockCount % this._blocksPerRow;\n    this._rowCount = Math.floor(this._blockCount / this._blocksPerRow);\n    this._world = [];\n\n    this.init();\n  }\n\n  init() {\n    for (let row = 0; row <= this._rowCount; row++) {\n      const tempRow = [];\n      if (row !== this._rowCount) {\n        for (let col = 0; col < this._blocksPerRow; col++) {\n          tempRow.push(1);\n        }\n      } else {\n        for (let col = 0; col < this._lastRow; col++) {\n          tempRow.push(1);\n        }\n      }\n\n      if (tempRow.length !== 0) {\n        this._world.push(tempRow);\n      }\n    }\n  }\n\n  toggle(x, y) {\n    this._world[y][x] === 1 ? this._world[y][x] = 0 : this._world[y][x] = 1;\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}